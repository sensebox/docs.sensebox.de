items:
  - question: Wo finde ich Informationen zur senseBox zusammengefasst?
    answer: Alle wichtigen Informationen zu den verschiedenen senseBoxen findest du
      [hier](https://sensebox.de/de/products)
    category: general
  - question: Welche senseBox ist die Richtige für mich?
    answer: Die
      [<b>senseBox:edu</b>](https://sensebox.kaufen/product/sensebox-edu)  ist
      die speziell für den Einsatz im Bildungsbereich entwickelte Version der
      senseBox. Sie enthält neben der senseBox MCU Sensoren für Temperatur,
      Luftfeuchtigkeit, Luftdruck, Helligkeit, UV-Intensität, Entfernungen und
      Lärm, ein Display, ein WiFi- und ein SD-Karten-Modul sowie weitere
      elektronische Bauteile. Alle Bauteile befinden sich in einer aufgeräumten
      Kunststoffkiste und sind so auch bei regelmäßigem Einsatz immer gut
      geschützt und leicht zu überprüfen. <br><br> Die
      [<b>senseBox:mini</b>](https://sensebox.kaufen/product/sensebox-mini) ist
      das Einstiegsset in die Welt der senseBox. Es enthält die senseBox MCU,
      das WiFi-Modul, das Display und den senseBox-Umweltsensor (Möglichkeit zur
      Messung von Temperatur, Luftfeuchtigkeit, Luftdruck und
      Innenraumluftqualität). Die senseBox:mini bietet so alles Nötige, um mit
      IoT-Projekten, wie zum Beispiel einem Homeserver oder einem Chatbot, zu
      starten. Die senseBox:mini ist außerdem als Klassenkiste erhältlich.
      Weitere Informationen zur senseBox:mini Klassenkiste finden Sie auf dem
      angehängten Infoblatt.<br><br> Die
      [<b>senseBox:home</b>](https://sensebox.kaufen/product/sensebox-home) ist
      ein Bausatz für eine DIY-Umweltmessstation, welche ihre Messwerte online
      auf der openSenseMap teilen kann. Den Mikrocontroller und einige
      Grundkomponenten haben wir bereits als Set zusammengestellt. Alle weiteren
      Sensoren und Bauteile können selbständig ausgewählt und so eine
      individuelle Umweltmessstation kreiert werden. Den passenden Programmcode
      gibt es von uns dazu, es muss also nicht programmiert werden.
    category: general
  - question: Für wen ist die senseBox geeignet?
    answer: Im Schulkontext empfehlen wir ein Mindestalter von 12 Jahren. Diese
      Empfehlung ist natürlich ganz stark vom Betreuungsschlüssel abhängig. Wir
      führen auch Workshops in Grundschulen durch.
    category: general
  - question: Was brauche ich für die senseBox?
    answer: In einer senseBox ist alles enthalten, was du brauchst. Mit Ausnahme
      eines Computers und einer Internetverbindung natürlich.
    category: general
  - question: Wo kann ich die senseBox kaufen?
    answer: Die senseBox ist in unserem eigenen Online Shop unter
      [sensebox.kaufen](https://sensebox.kaufen) erhältlich.
    category: general
  - question: Wo finde ich die Anleitung für meine ersten Schritte?
    answer: Hier in den Docs findest du Anleitungen für die ersten Schritte mit
      [Blockly für senseBox](/blockly/allgemein-basics-inbetriebnahme-copy/),
      [openroberta](/blockly/allgemein-einfuehrung-openroberta/) und der
      [Arduino IDE](/category/arduino/).
  - question: Gibt es Lehr-/Lernmaterialien?
    answer: Ja! Die Arbeit mit der senseBox steht und fällt mit dem Material. Für
      die <b>senseBox:edu</b> und <b>senseBox:mini</b> findest du
      [Lehrmaterial](https://sensebox.de/de/material) und
      [Projekte](https://sensebox.de/de/projects/) auf unserer Website.
      Anleitungen für die <b>senseBox:home</b> findest du
      [hier](/category/sensebox-home/) in den Docs. Alle Materialien sind open
      educational ressources (OER) und somit frei verfügbar.
  - question: Wie kann die senseBox programmiert werden?
    answer: "Die senseBox kann grafisch über unsere [Lern- und Programmierumgebung (Blockly)](https://blockly-react.netlify.app/) und
      dem [Open Roberta Lab](https://lab.open-roberta.org/) programmiert werden. Alternativ kann die senseBox textbasiert über die
      [Arduino IDE](https://www.arduino.cc/) programmiert werden. Mehr
      Informationen zum Umgang mit den Programmierumgebungen findest du in den einzelnen Anleitungen: 

       - [Blockly für die senseBox]()

       - [Open Roberta Lab](https://docs.sensebox.de/misc/allgemein-einfuehrung-openroberta/) 

       - [Arduino IDE]() 
      "
    category: software
  - question: Warum kein standard Arduino oder Raspberry?
    answer: Der Raspberry ist für den Einsatz mit Programmieranfängern zu
      kompliziert und für unsere Einsatzzwecke einfach überdimensioniert. Die
      senseBox MCU wurde speziell auf Arduinobasis entwickelt und bietet alles,
      was auch ein standard Arduino bietet. Zusätzlich ermöglicht sie aber die
      browserbasierte Programmierung ohne Softwareinstallation und das einfache
      anstecken der Sensoren via JST-Kabel.
  - question: Wer steckt hinter der senseBox?
    answer: Die senseBox enstand im Schülerlabor
      [GI@School](https://www.uni-muenster.de/Geoinformatics/gi-at-school/) der
      Universität Münster. Nach einer Förderung des Bundesministeriums für
      Bildung und Forschung fand 2018 die Ausgründung der [reedu GmbH & Co.
      KG](https://reedu.de/) statt, welche sich heute zusammen mit der
      Universität um alles rund um die senseBox kümmert.
  - question: Wo finde ich die neue senseBox Connect App?
    answer: Du kannst die App im Apple
      [Appstore](https://apps.apple.com/ca/app/sensebox-connect/id1586961095?ign-mpt=uo%3D2)
      herunterladen. Weitere Informationen zur App und Verwendung der App
      findest unter [https://sensebox.de/app](https://sensebox.de/app)
  - question: Was passiert, wenn man den Reset-Knopf nur einmal drückt? 
    answer: Die MCU startet den Sketch der momentan auf der MCU hochgeladen ist neu.
  - question: Welche Funktionen verstecken sich hinter dem Switch-Knopf?  
    answer: Der Switch-Button lässt sich über Programmatisch mit der Initialisierung `Button switchButton(0);` ansteuern. Über die Zeile `switchButton.isPressed()`  kannst du im Programm prüfen ob der Knopf gedrückt wurde. In einem [Beispielprojekt](https://sensebox.de/projects/de/2021-01-05-display) mit dem Display siehst du eine kurze Anleitung wie dieser funktioniert.
  - question: Was passiert, wenn man die MCU vom Strom trennt? Kann man schadlos weiter machen, wenn man danach wieder den Stromanschluss herstellt?
    answer: Ja, du kannst einfach schadlos weitermachen. Achte nur darauf, dass das Prorgramm wieder "von vorne" startet und wieder zuerst die `setup()` Funktion ausführt.
  - question: Wie viele Sensoren kann man anschließen? Wann hat der interne Speicher keinen Platz mehr?
    answer: So viele wie die senseBox Anschlüsse hat. Darüber hinaus kannst du zusätzliche I2C Sensoren mithifle des [Multiplexers](https://sensebox.kaufen/product/multiplexer) benutzen. Hier ist aber zu beachten, dass du ohne den Expander nicht zwei gleiche I2C Sensoren anschließen kannst. D.h. du kannst nicht 2x den HDC1080 an der gleichen MCU anschließen. Dafür bräuchtest du den Expander. Wieviel % des internen Speichers belegt wird, wird dir am Ende des Hochladens (über die ArduinoIDE) angezeigt. Bisher sind wir noch nicht an den Punkt gekommen an dem eine MCU "voll" war. Das war eher immer Hardwareseitig begrenzt (i.e. Anzahl der Anschlüsse) oder an die Übertragungsart (LoRa liegt das Limit bei ~14 Messwerten) gekopppelt.
  - question: Wie bewerkstelligt man einen Stromsparmodus?
    answer: Nativ gibt es keinen Stromsparmodus. Du kannst die MCU aber stromsparend programmieren. Das kann u.a. bedeuten, dass nur alle 10 Minuten Messwerte hochgeladen werden und innerhalb dieser 10 Minuten "schlafen gelegt" wird. Dies kann entweder über diese [Library](https://www.arduino.cc/reference/en/libraries/arduino-low-power/lowpower.deepsleep/) erfolgen, oder über andere Stromsparmaßnahmen (Wifi in der Zwischenzeit aus, Sensoren aus, ...) 
  - question: Wie kann man testen, ob die Bauteile alle funktionieren?
    answer: Falls du die [Arduino IDE und das senseBox Board Support Package installiert hast](https://docs.sensebox.de/category/arduino/) kannst du in der Arduino IDE unter `Datei->Beispiele->senseBox-Tests->mcu_component_test`` einen Sketch laden, der alle angeschlossenen Sensoren testet und erste Werte anzeigt. Wenn du deine Wifi Daten in Zeile 25 und 26 angibst, kannst du zusätzlich mithifle eines WiFi Bees die Verbindung zur openSenseMap testen. Nachdem du den Sketch hochgeladen hast, werden dir alle Instruktionen dazu im Seriellen Monitor angezeigt.


